definitions:
  model.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  model.RegisterRequest:
    properties:
      email:
        type: string
      firstname:
        type: string
      lastname:
        type: string
      password:
        minLength: 8
        type: string
      profile:
        type: string
      username:
        type: string
    required:
    - email
    - firstname
    - lastname
    - password
    - username
    type: object
  model.RequestUpdateUser:
    properties:
      email:
        type: string
      firstname:
        type: string
      lastname:
        type: string
      profile:
        type: string
      username:
        type: string
    type: object
  model.RequestUpdateUserPassword:
    properties:
      new_password:
        minLength: 8
        type: string
      old_password:
        type: string
    required:
    - new_password
    - old_password
    type: object
info:
  contact: {}
  description: Authentication Service สำหรับขอจัดการเกี่ยวกับ Authentication
  title: Authentication Service API
  version: v0
paths:
  /api/user/{id}:
    put:
      description: Edit User
      operationId: UpdateUserByID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: User data to edit
        in: body
        name: RequestUpdateUser
        required: true
        schema:
          $ref: '#/definitions/model.RequestUpdateUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Edit User
      tags:
      - User
  /api/user/{id}/ban:
    post:
      description: BanUser
      operationId: BanUser
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: BanUser
      tags:
      - Admin
  /api/user/change-password:
    put:
      description: Change Password
      operationId: ChangePassword
      parameters:
      - description: User password to change password
        in: body
        name: RequestUpdateUserPassword
        required: true
        schema:
          $ref: '#/definitions/model.RequestUpdateUserPassword'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: Change Password
      tags:
      - User
  /api/users:
    get:
      description: GetAllUsers
      operationId: GetAllUsers
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: GetAllUsers
      tags:
      - User
  /auth/login:
    post:
      description: Login user
      operationId: Login
      parameters:
      - description: User data to login
        in: body
        name: loginRequest
        required: true
        schema:
          $ref: '#/definitions/model.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Login
      tags:
      - Authentications
  /auth/register:
    post:
      description: Register user
      operationId: Register
      parameters:
      - description: User data to create
        in: body
        name: registerRequest
        required: true
        schema:
          $ref: '#/definitions/model.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Register
      tags:
      - Authentications
schemes:
- http
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
